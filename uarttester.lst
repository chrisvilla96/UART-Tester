;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29/05/2022 09:36:22 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28BA      	GOTO       186
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0823      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0822      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x000A	0x3000      	MOVLW      0
0x000B	0x1283      	BCF        STATUS, 5
0x000C	0x1303      	BCF        STATUS, 6
0x000D	0x1A8C      	BTFSC      PIR1, 5
0x000E	0x3001      	MOVLW      1
0x000F	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x0010	0x0008      	RETURN
; end of _UART1_Data_Ready
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x0011	0x1283      	BCF        STATUS, 5
0x0012	0x1303      	BCF        STATUS, 6
0x0013	0x081A      	MOVF       RCREG, 0
0x0014	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x0015	0x1C98      	BTFSS      RCSTA, 1
0x0016	0x2819      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x0017	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x0018	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x0019	0x0871      	MOVF       R1, 0
0x001A	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x001B	0x0008      	RETURN
; end of _UART1_Read
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x001C	0x2003      	CALL       _____DoICP
0x001D	0x118A      	BCF        PCLATH, 3
0x001E	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x001F	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0020	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0021	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0022	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0023	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0024	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0025	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0026	0x281C      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0027	0x0008      	RETURN
; end of ___CC2DW
_strlen:
;__Lib_CString.c,136 :: 		
;__Lib_CString.c,139 :: 		
0x0028	0x1283      	BCF        STATUS, 5
0x0029	0x1303      	BCF        STATUS, 6
0x002A	0x0845      	MOVF       FARG_strlen_s, 0
0x002B	0x00F2      	MOVWF      R2
;__Lib_CString.c,140 :: 		
L_strlen36:
0x002C	0x0872      	MOVF       R2, 0
0x002D	0x00F0      	MOVWF      R0
0x002E	0x0AF2      	INCF       R2, 1
0x002F	0x0870      	MOVF       R0, 0
0x0030	0x0084      	MOVWF      FSR
0x0031	0x0800      	MOVF       INDF, 0
0x0032	0x1903      	BTFSC      STATUS, 2
0x0033	0x2835      	GOTO       L_strlen37
;__Lib_CString.c,141 :: 		
0x0034	0x282C      	GOTO       L_strlen36
L_strlen37:
;__Lib_CString.c,142 :: 		
0x0035	0x0845      	MOVF       FARG_strlen_s, 0
0x0036	0x0272      	SUBWF      R2, 0
0x0037	0x00F0      	MOVWF      R0
0x0038	0x3001      	MOVLW      1
0x0039	0x02F0      	SUBWF      R0, 1
0x003A	0x01F1      	CLRF       R0+1
0x003B	0x1C03      	BTFSS      STATUS, 0
0x003C	0x03F1      	DECF       R0+1, 1
;__Lib_CString.c,143 :: 		
L_end_strlen:
0x003D	0x0008      	RETURN
; end of _strlen
_update_alarm:
;main.c,35 :: 		void update_alarm(char alarm_data[ALARM_PACKET_LENGTH]) {
;main.c,37 :: 		char alarm_index = GET_ALARM_INDEX(alarm_data[0]);
0x003E	0x1283      	BCF        STATUS, 5
0x003F	0x1303      	BCF        STATUS, 6
0x0040	0x0845      	MOVF       FARG_update_alarm_alarm_data, 0
0x0041	0x0084      	MOVWF      FSR
0x0042	0x0800      	MOVF       INDF, 0
0x0043	0x00F2      	MOVWF      R2
0x0044	0x0872      	MOVF       R2, 0
0x0045	0x00F0      	MOVWF      R0
0x0046	0x0CF0      	RRF        R0, 1
0x0047	0x13F0      	BCF        R0, 7
0x0048	0x0CF0      	RRF        R0, 1
0x0049	0x13F0      	BCF        R0, 7
0x004A	0x0CF0      	RRF        R0, 1
0x004B	0x13F0      	BCF        R0, 7
0x004C	0x300F      	MOVLW      15
0x004D	0x0570      	ANDWF      R0, 0
0x004E	0x00F1      	MOVWF      R1
0x004F	0x0871      	MOVF       R1, 0
0x0050	0x00F5      	MOVWF      R5
;main.c,38 :: 		alarm_index = LESS_THAN_OR(alarm_index, 10, -1);
0x0051	0x300A      	MOVLW      10
0x0052	0x0271      	SUBWF      R1, 0
0x0053	0x1803      	BTFSC      STATUS, 0
0x0054	0x2858      	GOTO       L_update_alarm3
0x0055	0x0875      	MOVF       R5, 0
0x0056	0x00F3      	MOVWF      R3
0x0057	0x285A      	GOTO       L_update_alarm4
L_update_alarm3:
0x0058	0x30FF      	MOVLW      255
0x0059	0x00F3      	MOVWF      R3
L_update_alarm4:
0x005A	0x0873      	MOVF       R3, 0
0x005B	0x00F5      	MOVWF      R5
;main.c,40 :: 		if (alarm_index > 0) {
0x005C	0x0873      	MOVF       R3, 0
0x005D	0x3C00      	SUBLW      0
0x005E	0x1803      	BTFSC      STATUS, 0
0x005F	0x2876      	GOTO       L_update_alarm5
;main.c,41 :: 		char offset = 0; //alarmIndex * FULL_PACKET_LENGTH;
;main.c,44 :: 		for (index = 0; index < ALARM_PACKET_LENGTH; index++) {
0x0060	0x01F4      	CLRF       R4
L_update_alarm6:
0x0061	0x3003      	MOVLW      3
0x0062	0x0274      	SUBWF      R4, 0
0x0063	0x1803      	BTFSC      STATUS, 0
0x0064	0x2876      	GOTO       L_update_alarm7
;main.c,46 :: 		alarms[pepe + index] = alarm_data[index];
0x0065	0x0874      	MOVF       R4, 0
0x0066	0x00F0      	MOVWF      R0
0x0067	0x01F1      	CLRF       R0+1
0x0068	0x0870      	MOVF       R0, 0
0x0069	0x3E24      	ADDLW      _alarms
0x006A	0x00F1      	MOVWF      R1
0x006B	0x0874      	MOVF       R4, 0
0x006C	0x0745      	ADDWF      FARG_update_alarm_alarm_data, 0
0x006D	0x0084      	MOVWF      FSR
0x006E	0x0800      	MOVF       INDF, 0
0x006F	0x00F0      	MOVWF      R0
0x0070	0x0871      	MOVF       R1, 0
0x0071	0x0084      	MOVWF      FSR
0x0072	0x0870      	MOVF       R0, 0
0x0073	0x0080      	MOVWF      INDF
;main.c,44 :: 		for (index = 0; index < ALARM_PACKET_LENGTH; index++) {
0x0074	0x0AF4      	INCF       R4, 1
;main.c,47 :: 		}
0x0075	0x2861      	GOTO       L_update_alarm6
L_update_alarm7:
;main.c,48 :: 		}
L_update_alarm5:
;main.c,50 :: 		}
L_end_update_alarm:
0x0076	0x0008      	RETURN
; end of _update_alarm
_UART1_Read_Text:
;__Lib_UART_c67.c,59 :: 		
;__Lib_UART_c67.c,60 :: 		
0x0077	0x1283      	BCF        STATUS, 5
0x0078	0x1303      	BCF        STATUS, 6
0x0079	0x01C9      	CLRF       UART1_Read_Text_out_idx_L0
0x007A	0x01CA      	CLRF       UART1_Read_Text_delim_idx_L0
;__Lib_UART_c67.c,62 :: 		
L_UART1_Read_Text7:
0x007B	0x0847      	MOVF       FARG_UART1_Read_Text_Attempts, 0
0x007C	0x1903      	BTFSC      STATUS, 2
0x007D	0x28B6      	GOTO       L_UART1_Read_Text8
;__Lib_UART_c67.c,64 :: 		
0x007E	0x0847      	MOVF       FARG_UART1_Read_Text_Attempts, 0
0x007F	0x3AFF      	XORLW      255
0x0080	0x1903      	BTFSC      STATUS, 2
0x0081	0x2883      	GOTO       L_UART1_Read_Text9
;__Lib_UART_c67.c,65 :: 		
0x0082	0x03C7      	DECF       FARG_UART1_Read_Text_Attempts, 1
L_UART1_Read_Text9:
;__Lib_UART_c67.c,67 :: 		
L_UART1_Read_Text10:
0x0083	0x200A      	CALL       _UART1_Data_Ready
0x0084	0x0870      	MOVF       R0, 0
0x0085	0x3A00      	XORLW      0
0x0086	0x1D03      	BTFSS      STATUS, 2
0x0087	0x2889      	GOTO       L_UART1_Read_Text11
;__Lib_UART_c67.c,68 :: 		
0x0088	0x2883      	GOTO       L_UART1_Read_Text10
L_UART1_Read_Text11:
;__Lib_UART_c67.c,70 :: 		
0x0089	0x2011      	CALL       _UART1_Read
0x008A	0x0870      	MOVF       R0, 0
0x008B	0x00C8      	MOVWF      UART1_Read_Text_r_data_L0
;__Lib_UART_c67.c,71 :: 		
0x008C	0x0849      	MOVF       UART1_Read_Text_out_idx_L0, 0
0x008D	0x0745      	ADDWF      FARG_UART1_Read_Text_Output, 0
0x008E	0x0084      	MOVWF      FSR
0x008F	0x0870      	MOVF       R0, 0
0x0090	0x0080      	MOVWF      INDF
0x0091	0x0AC9      	INCF       UART1_Read_Text_out_idx_L0, 1
;__Lib_UART_c67.c,72 :: 		
0x0092	0x084A      	MOVF       UART1_Read_Text_delim_idx_L0, 0
0x0093	0x0746      	ADDWF      FARG_UART1_Read_Text_Delimiter, 0
0x0094	0x0084      	MOVWF      FSR
0x0095	0x0800      	MOVF       INDF, 0
0x0096	0x0648      	XORWF      UART1_Read_Text_r_data_L0, 0
0x0097	0x1D03      	BTFSS      STATUS, 2
0x0098	0x289B      	GOTO       L_UART1_Read_Text12
;__Lib_UART_c67.c,73 :: 		
0x0099	0x0ACA      	INCF       UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,74 :: 		
0x009A	0x28A3      	GOTO       L_UART1_Read_Text13
L_UART1_Read_Text12:
;__Lib_UART_c67.c,76 :: 		
0x009B	0x01CA      	CLRF       UART1_Read_Text_delim_idx_L0
;__Lib_UART_c67.c,77 :: 		
0x009C	0x0846      	MOVF       FARG_UART1_Read_Text_Delimiter, 0
0x009D	0x0084      	MOVWF      FSR
0x009E	0x0800      	MOVF       INDF, 0
0x009F	0x0648      	XORWF      UART1_Read_Text_r_data_L0, 0
0x00A0	0x1D03      	BTFSS      STATUS, 2
0x00A1	0x28A3      	GOTO       L_UART1_Read_Text14
;__Lib_UART_c67.c,78 :: 		
0x00A2	0x0ACA      	INCF       UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,79 :: 		
L_UART1_Read_Text14:
;__Lib_UART_c67.c,80 :: 		
L_UART1_Read_Text13:
;__Lib_UART_c67.c,82 :: 		
0x00A3	0x084A      	MOVF       UART1_Read_Text_delim_idx_L0, 0
0x00A4	0x0746      	ADDWF      FARG_UART1_Read_Text_Delimiter, 0
0x00A5	0x0084      	MOVWF      FSR
0x00A6	0x0800      	MOVF       INDF, 0
0x00A7	0x3A00      	XORLW      0
0x00A8	0x1D03      	BTFSS      STATUS, 2
0x00A9	0x28B5      	GOTO       L_UART1_Read_Text15
;__Lib_UART_c67.c,83 :: 		
0x00AA	0x084A      	MOVF       UART1_Read_Text_delim_idx_L0, 0
0x00AB	0x0249      	SUBWF      UART1_Read_Text_out_idx_L0, 0
0x00AC	0x00F0      	MOVWF      R0
0x00AD	0x01F1      	CLRF       R0+1
0x00AE	0x1C03      	BTFSS      STATUS, 0
0x00AF	0x03F1      	DECF       R0+1, 1
0x00B0	0x0870      	MOVF       R0, 0
0x00B1	0x0745      	ADDWF      FARG_UART1_Read_Text_Output, 0
0x00B2	0x0084      	MOVWF      FSR
0x00B3	0x0180      	CLRF       INDF
;__Lib_UART_c67.c,84 :: 		
0x00B4	0x28B9      	GOTO       L_end_UART1_Read_Text
;__Lib_UART_c67.c,85 :: 		
L_UART1_Read_Text15:
;__Lib_UART_c67.c,87 :: 		
0x00B5	0x287B      	GOTO       L_UART1_Read_Text7
L_UART1_Read_Text8:
;__Lib_UART_c67.c,88 :: 		
0x00B6	0x0845      	MOVF       FARG_UART1_Read_Text_Output, 0
0x00B7	0x0084      	MOVWF      FSR
0x00B8	0x0180      	CLRF       INDF
;__Lib_UART_c67.c,89 :: 		
L_end_UART1_Read_Text:
0x00B9	0x0008      	RETURN
; end of _UART1_Read_Text
_main:
0x00BA	0x303B      	MOVLW      59
0x00BB	0x1283      	BCF        STATUS, 5
0x00BC	0x1303      	BCF        STATUS, 6
0x00BD	0x00A0      	MOVWF      ?lstr1_main
0x00BE	0x01A1      	CLRF       33
;main.c,52 :: 		void main() {
;main.c,54 :: 		TRISB = 0;
0x00BF	0x1683      	BSF        STATUS, 5
0x00C0	0x0186      	CLRF       TRISB
;main.c,58 :: 		while (TRUE) {
L_main9:
;main.c,59 :: 		if (UART1_Data_Ready() == 1) {
0x00C1	0x200A      	CALL       _UART1_Data_Ready
0x00C2	0x0870      	MOVF       R0, 0
0x00C3	0x3A01      	XORLW      1
0x00C4	0x1D03      	BTFSS      STATUS, 2
0x00C5	0x28CD      	GOTO       L_main11
;main.c,60 :: 		UART1_Read_Text(inputBuffer, ";", ALARM_PACKET_LENGTH + 1);
0x00C6	0x3042      	MOVLW      _inputBuffer
0x00C7	0x00C5      	MOVWF      FARG_UART1_Read_Text_Output
0x00C8	0x3020      	MOVLW      ?lstr1_main
0x00C9	0x00C6      	MOVWF      FARG_UART1_Read_Text_Delimiter
0x00CA	0x3004      	MOVLW      4
0x00CB	0x00C7      	MOVWF      FARG_UART1_Read_Text_Attempts
0x00CC	0x2077      	CALL       _UART1_Read_Text
;main.c,61 :: 		}
L_main11:
;main.c,63 :: 		if (strlen(inputBuffer) == 3) {
0x00CD	0x3042      	MOVLW      _inputBuffer
0x00CE	0x00C5      	MOVWF      FARG_strlen_s
0x00CF	0x2028      	CALL       _strlen
0x00D0	0x3000      	MOVLW      0
0x00D1	0x0671      	XORWF      R0+1, 0
0x00D2	0x1D03      	BTFSS      STATUS, 2
0x00D3	0x28D6      	GOTO       L__main18
0x00D4	0x3003      	MOVLW      3
0x00D5	0x0670      	XORWF      R0, 0
L__main18:
0x00D6	0x1D03      	BTFSS      STATUS, 2
0x00D7	0x28DB      	GOTO       L_main12
;main.c,64 :: 		update_alarm(inputBuffer);
0x00D8	0x3042      	MOVLW      _inputBuffer
0x00D9	0x00C5      	MOVWF      FARG_update_alarm_alarm_data
0x00DA	0x203E      	CALL       _update_alarm
;main.c,65 :: 		}
L_main12:
;main.c,67 :: 		delay_ms(250);
0x00DB	0x3003      	MOVLW      3
0x00DC	0x00FB      	MOVWF      R11
0x00DD	0x308A      	MOVLW      138
0x00DE	0x00FC      	MOVWF      R12
0x00DF	0x3055      	MOVLW      85
0x00E0	0x00FD      	MOVWF      R13
L_main13:
0x00E1	0x0BFD      	DECFSZ     R13, 1
0x00E2	0x28E1      	GOTO       L_main13
0x00E3	0x0BFC      	DECFSZ     R12, 1
0x00E4	0x28E1      	GOTO       L_main13
0x00E5	0x0BFB      	DECFSZ     R11, 1
0x00E6	0x28E1      	GOTO       L_main13
0x00E7	0x0000      	NOP
0x00E8	0x0000      	NOP
;main.c,68 :: 		inputBuffer[0] = 1;
0x00E9	0x3001      	MOVLW      1
0x00EA	0x00C2      	MOVWF      _inputBuffer
;main.c,69 :: 		alarms[0] = 1;
0x00EB	0x3001      	MOVLW      1
0x00EC	0x00A4      	MOVWF      _alarms
;main.c,70 :: 		}
0x00ED	0x28C1      	GOTO       L_main9
;main.c,73 :: 		}
L_end_main:
0x00EE	0x28EE      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A       [7]    _UART1_Data_Ready
0x0011      [11]    _UART1_Read
0x001C      [12]    ___CC2DW
0x0028      [22]    _strlen
0x003E      [57]    _update_alarm
0x0077      [67]    _UART1_Read_Text
0x00BA      [53]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x000A       [1]    PCLATH
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x001A       [1]    RCREG
0x0020       [2]    ?lstr1_main
0x0022       [2]    ___DoICPAddr
0x0024      [30]    _alarms
0x0042       [3]    _inputBuffer
0x0045       [1]    FARG_UART1_Read_Text_Output
0x0045       [1]    FARG_update_alarm_alarm_data
0x0045       [1]    FARG_strlen_s
0x0046       [1]    FARG_UART1_Read_Text_Delimiter
0x0047       [1]    FARG_UART1_Read_Text_Attempts
0x0048       [1]    UART1_Read_Text_r_data_L0
0x0049       [1]    UART1_Read_Text_out_idx_L0
0x004A       [1]    UART1_Read_Text_delim_idx_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
